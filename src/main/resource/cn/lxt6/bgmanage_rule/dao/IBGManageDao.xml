<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lxt6.bgmanage_rule.dao.IBGManageDao">

    <select id="createTable" parameterType="map" resultType="java.lang.Integer">
        SELECT ${procedureName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="parMap.entrySet()" item="value" index="key">
                <if test='value!=null'>
                    ${value},
                </if>
            </foreach>
        </trim>
    </select>
    <insert id="insert" parameterType="map">
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="parMap.entrySet()" item="value" index="key">
                <if test='value!=null'>
                    ${key},
                </if>
            </foreach>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <foreach collection="parMap.entrySet()" item="value" index="key">
                <choose>
                    <when test="value ==null ">

                    </when>
                    <when test="key.lastIndexOf('_json')!=-1">
                        (#{value})::json,
                    </when>
                    <otherwise>
                        #{value},
                    </otherwise>
                </choose>
            </foreach>
        </trim>;
    </insert>
    <update id="update" parameterType="map">
        update ${tableName}
        <set>
            <trim suffixOverrides=",">
                <foreach collection="setPar.entrySet()" item="value" index="key">
                    <choose>
                        <when test="value ==null ">

                        </when>
                        <when test="key.lastIndexOf('_json')!=-1">
                            ${key}=(#{value})::json,
                        </when>
                        <otherwise>
                            ${key}=#{value},
                        </otherwise>
                    </choose>
                </foreach>
            </trim>
        </set>
        <include refid="whereSQL"/>
    </update>
    <delete id="delete" parameterType="map">
        delete from ${tableName} <include refid="whereSQL"/>
    </delete>
    <sql id="whereSQL">
        <where>
            <foreach collection="wherePar.entrySet()" item="value" index="key">
                <if test='value!=null'>
                    and ${key}='${value}'
                </if>
            </foreach>
        </where>
    </sql>
</mapper>